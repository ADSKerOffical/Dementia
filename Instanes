Классы это всё в роблоксе из них состоят все игры
? Классов в роблоксе более 750 штук
? Все классы имеют метатаблицу, но она защищённая

Для всех классов есть функции:

 P: Parent: Instance – Ставит родителя для объекта (от кого будет зависеть существование этого объекта)
 P: ClassName: string – Получает название класса у объекта
 M: Clone(): Instance – Клонирует объект
  ! Все сигналы сбрасываются у скопированного объекта
  ? Нельзя скопировать объект который Not creatable 
 M: IsA(ClassName): bool
  ? С помощью этой функции можно индефицировать абстрактные классы
  ? game в функции IsA обозначается как <<<ROOT>>>
 M: GetChildren(): table – получает все объекты у которых Parent указан на этот Instance (Workspace:GetChildren() – Workspace.Part: true, Workspace.Part.Part2: false)
 M: GetDescendants(): table – получает вае объекты которые как-то связаны с этим Instance (Workspace GetDescendants(): Workspace.Part: true, Workspace.Part.Part2: true)
 M: ClearAllChildren(): void – удаляет все объекты у которых Parent указан на этот Instance
 M: Destroy(): void – удаляет объект
  ? Объект удаляется и все его циклы и соединения, но всё ещё есть в памяти игры
 M: GetFullName(): Instance – получает полное имя Instance
 
 И так далее
 ? Для полного изучения посмотри здесь: https://create.roblox.com/docs/reference/engine/classes/Instance
 ? Статусы у классов и их статусы параметров:
 
  Not creatable – нельзя создать объект через Instance.new
  Not replicated – нельзя использовать (получить информацию или изменить) (но часто можно)
  Yield – параметр задерживает работу скрипта
  Can Yield – параметр может задержать работу скрипта
  Read Parallel – параметр может выполняться одновременно с другими частями скрипта
  Read Only – означает что этот параметр нельзя изменить, но можно получить 
  Not Scriptable – к нему нельзя получить доступ с помощью кода скрипта
  Service – означает что instance является сервисом и можно получить через game:GetService
  Not browsable – статус которые в основном имеют абстрактные классы
  Deprecated – класс или параметр устарел, но его можно использовать
  Not accessable – не получится использовать rbxassetid для этого параметра
  Plugin Security – параметр который может использоваться только плагином
  Hidden – параметр нельзя изменить и получить обычным способом
  Write Parallel – может безопасно изменять данные
  Roblox Script Security – параметр который может использовать только роблокс скрипты
  Local User Security – параметр который может использовать только локальный игрок 

Также для классов есть абстрактные классы
? Абстрактные классы это класс в котором содержатся другие классы
И вот абстрактные классы которые в основном используются в роблоксе 

1) BasePart

 BasePart это абстрактный класс (суперкласс) в котором состоят все виды Part
 ? PVInstance это тоже самое что и BasePart
  Из них:

  Part – Самый обычный объект, не имеет особые сетки (Mesh), больше всего используется в играх
  MeshPart – Part который имеет свою сетку (специальный визуальный вид) и текстуру для этой сетки
  ! MeshPart недоступный в роблокс студио обычным способом (нельзя поставить MeshId)
  Union – Part в котором содержится больше одной части (похоже по смыслу как Model)
  UnionOperation – Почти тоже самое что и Union, используется этот класс для создания Mesh
  WedgePart – Создаёт прямоугольный треугольник, не имеет особые сетки
  TrussPart – Создаёт лестницу
  Seat – Создаёт обычный объект на котором можно сидеть
  VehicleSeat – Тоже самое что и Seat, но использовуется только для машин
  SpawnLocation – Объект на котором появляются игроки

2) FaceInstance

 FaceInstance это абстрактный класс для всех классов которые накладываются на объекты (BasePart)
  Из них:
  
   Decal – Создаёт наклейку с изображением по айди (по умолчанию с направлением переда объекта)
   Texture – Тоже самое что и Decal

3) Constraint

 Constraint это абстрактный класс который используется для механизмов
 ? Позиция механизмов регулируются с помощью Attachment
  Некоторые из них:
  
    Torque – Применяет для объекта вращающую силу 
    AngularVelocity – Устанавливает скорость объекта вокруг своего центра
    LineForce – Применяет силу вдоль линии между двумя Attachments
    LinearVelocity – Устанавливает прямолинейную скорость объекта
    AlignOrientation – Выравнивает ориентацию другого объекта с ориентацией другого объекта
    RopeConstraint – Создаёт верёвочное соединение между двумя объектами

4) BodyMover

 BodyMover это абстрактный класс который используется для всех классов которые двигают объекты
  Из них:
  
   BodyVelocity – Двигает объект строго по заданному направлению
   BodyAngularVelocity – Крутит объект вокруг своей оси
   BodyThrust – Создаёт импульс на заданной позиции
   BodyGyro – Удерживает объект в определенной позиции 
   BodyForce – Прикладывает постоянную силу к объекту
   BodyPosition – Притягивает объект в определенной позиции 
   RocketPropulsion – Создаёт силу тяги в определенном направлении

5) BaseScript

 Это абстрактный класс для всех скриптов которые выполняются автоматически
 ? Чтобы остановить его можно использовать script.Enabled, script.Disabled
 ! script.Enabled не реплицируется
  Из них:
  
   Script – Скрипт который выполняется сервером, действия видны для всех игроков, не может быть выключен или удалён клиентом
   LocalScript – Скрипт который выполняется клиентом, действия видит только клиент, может быть удалён клиентом (только локальным)
   ModuleScript – Скрипт который состоит из функций

6) LuaSourceContainer

 Это абстрактный класс для всех скриптов которые имеют Lua код
 Все классы которые принадлежат LuaSourceContainer такие же как и у BaseScript

7) ValueBase

 Это абстрактный класс для всех скриптов которые можно изменять
 ? Изменять с помощью script.Value
  Из них:
  
   StringValue – Скрипт в котором значение используется строка
   NumberValue – Скрипт в котором значение используется число
   BoolValue – Скрипт в котором значение используется булевое значение (true or false)
   ObjectValue – Скрипт в котором значение используется другой Instance
   Color3Value – Скрипт в котором значение используется Color3
   Vector3Value – Скрипт в котором значение используется Vector3
   CFrameValue – Скрипт в котором значение используется CFrame
    ? CFrame расшифровывается как Coordinates Frame
    ? Vector3 используется лишь для определения позиции, но не направления, а CFrame для позиции и направления
   IntValue – Скрипт в котором значение используется число, но в отличии от NumberValue хранит и 64 битное целое число

8) JointInstance

 Это абстрактный класс для всех классов которые прикрепляют объекты 
  Из них:
  
   Weld – Строго прикрепляет два объекта
   Motor6D (Motor) – Прикрепляет два объекта и можно из них сделать анимацию
    ? В игроках используется Motor6D
   Glue – Является заменой WeldConstraint
   DynamicRotate – Автоматически вращает объект
   VelocityMotor – Контролирует скорость вращения объекта вокруг родной оси

9) Clothing

 Это абстрактный класс для всех классов которые связаны с одеждой (не аксессуаров)
  ? Этот класс работает только на игроков
  Из них:
  
   Shirt – Просто майка
   Pants – Просто штаны

10) Light

 Это абстрактный класс для всех классов которые освещают местность 
  Из них:
  
   PointLight – создаёт свет вокруг объекта 
   SpotLight – создаёт свет вниз
   SurfaceLight – создаёт свет вперёд объекта

11) Effect

 Это абстрактный класс для всех классов которые создают специальные эффекты
  Из них:
  
   Fire – создаёт эффект огня с использованием XML
   Sparkles – создаёт эффект частиц с использованием XML
   Smoke – создаёт эффект дыма с использованием XML
   Highlight – создаёт эффект подсветки
    ? Все его потомки визуально тоже подвергнуться подсветке
   ParticleEmitter – создаёт эффект частиц с указанными параметрами
   Trail – создаёт линию от двух Attachments
   Beam – создаёт луч от двух Attachments

12) PostEffect

 Это абстрактный класс для всех классов которые создают глобальные эффекты
 ? Их родитель обязательно должен быть на game.Lighting или workspace.CurrentCamera
  Из них:
  
   BloomEffect – создаёт эффект регулировки яркости
   BlurEffect – создаёт эффект размытия 
   ColorCorrectionEffect – создаёт глобальный эффект 
   DepthOfFieldEffect – создаёт эффект размытия для объектов на которые игрок не смотрит
   ColorGradingEffect – модифицирует значение цвета света
   SunRaysEffect – создаёт эффект лучей
